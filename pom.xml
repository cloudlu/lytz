<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.lytz</groupId>
    <artifactId>finance</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>LYTZ Finance Application</name>

    <prerequisites>
        <maven>3.0.5</maven>
    </prerequisites>

    <developers>
        <developer>
            <email>luliang1984@gmail.com</email>
            <name>Cloud Lu</name>
            <url>https://github.com/cloudlu</url>
            <id>cloudlu</id>
        </developer>
    </developers>

    <properties>
        <!-- java common properties -->
        <java.version>1.7</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <log4j2.version>2.3</log4j2.version>
        <slf4j.version>1.7.12</slf4j.version>
        <jboss-logging.version>3.3.0.Final</jboss-logging.version>
        <junit.version>4.12</junit.version>
        <guava.version>18.0</guava.version>
        <commons-lang3.version>3.4</commons-lang3.version>
        <commons-collections.version>3.2.1</commons-collections.version>
        
        <!-- db/orm -->
        <db.name>lytzfapp</db.name>
        <hsqldb.version>2.3.2</hsqldb.version>
        <commons-dbcp2.version>2.1</commons-dbcp2.version>
        <hikariCP.version>2.3.8</hikariCP.version>
        <hibernate.version>4.3.10.Final</hibernate.version>
        <hibernate-validator.version>5.0.2.Final</hibernate-validator.version>
        <hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
        <jdbc.groupId>org.hsqldb</jdbc.groupId>
        <jdbc.artifactId>hsqldb</jdbc.artifactId>
        <jdbc.version>${hsqldb.version}</jdbc.version>
        <jdbc.driverClassName>org.hsqldb.jdbcDriver</jdbc.driverClassName>
        <jdbc.dataSourceClassName>org.hsqldb.jdbc.JDBCDataSource</jdbc.dataSourceClassName>
        <jdbc.url><![CDATA[jdbc:hsqldb:file:${db.name};shutdown=true]]></jdbc.url>
        <jdbc.username>sa</jdbc.username>
        <jdbc.password />
        <jdbc.validationQuery><![CDATA[select 1 from INFORMATION_SCHEMA.SYSTEM_USERS]]></jdbc.validationQuery>
        
        <!-- service -->
        <ehcache.version>2.6.11</ehcache.version>
        <spring.version>4.1.4.RELEASE</spring.version>
        <javasimon.version>4.0.1</javasimon.version>
        <metrics.version>3.1.0</metrics.version>
        <jackson.version>2.5.3</jackson.version>
        <jsoup.version>1.8.2</jsoup.version>
        
        <!-- web -->
        <shiro.version>1.2.3</shiro.version>
        <servlet-api.version>3.0-alpha-1</servlet-api.version>
        <jsp-api.version>2.2.1-b03</jsp-api.version>
        <jstl.version>1.2</jstl.version>
        <el.version>2.2</el.version>
        <kaptcha.version>0.0.9</kaptcha.version>
        <sitemesh.version>2.4.2</sitemesh.version>
        <project.web.deployname>/lytzfapp</project.web.deployname>
        <commons-fileupload.version>1.3.1</commons-fileupload.version>
    </properties>

    <scm>
        <connection>scm:git:https://github.com/cloudlu/lytz.git</connection>
        <developerConnection>scm:git:https://github.com/cloudlu/lytz.git</developerConnection>
        <url>https://github.com/cloudlu/lytz</url>
    </scm>


    <dependencies>
        <!-- common -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>${jboss-logging.version}</version>
        </dependency>  
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons-collections.version}</version>
        </dependency>
                

        <!-- test -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Upgrade junit-dep used by jmock The artifact junit:junit-dep:jar:4.11 
            has been relocated to junit:junit:jar:4.11 <dependency> <groupId>junit</groupId> 
            <artifactId>junit-dep</artifactId> <version>${junitVersion}</version> <scope>test</scope> 
            </dependency> -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- <dependency> <groupId>org.subethamail</groupId> <artifactId>subethasmtp-wiser</artifactId> 
            <version>${wiserVersion}</version> <scope>test</scope> </dependency> -->

        <!-- for source -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>${commons-dbcp2.version}</version>
        </dependency>
                
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP-java6</artifactId>
            <version>${hikariCP.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb.version}</version>
        </dependency>
        <!-- <dependency> <groupId>cglib</groupId> <artifactId>cglib-nodep</artifactId> 
            <version>${cglib-nodep.version}</version> </dependency> -->
        <dependency>
            <groupId>${jdbc.groupId}</groupId>
            <artifactId>${jdbc.artifactId}</artifactId>
            <version>${jdbc.version}</version>
        </dependency>
        <!-- for hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!-- Use Javassist as Hibernate's bytecode provider -->
        <!-- <dependency> <groupId>org.javassist</groupId> <artifactId>javassist</artifactId> 
            <version>${javassist.version}</version> </dependency> -->

        <!-- Enable EhCache support -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
        </dependency>


        <!-- system monitor -->
        <!-- Core JAR is absolutely necessary to use Simons (Stopwatch, etc.) -->
        <dependency>
            <groupId>org.javasimon</groupId>
            <artifactId>javasimon-core</artifactId>
            <version>${javasimon.version}</version>
        </dependency>
        <!-- The same for JDBC 4.1 (Java 7) -->
        <dependency>
            <groupId>org.javasimon</groupId>
            <artifactId>javasimon-jdbc41</artifactId>
            <version>${javasimon.version}</version>
        </dependency>
        <!-- JavaEE support, servlet filter, EJB/CDI interceptor -->
        <dependency>
            <groupId>org.javasimon</groupId>
            <artifactId>javasimon-javaee</artifactId>
            <version>${javasimon.version}</version>
        </dependency>
        <!-- Spring support, AOP interceptor, MVC handler interceptor -->
        <dependency>
            <groupId>org.javasimon</groupId>
            <artifactId>javasimon-spring</artifactId>
            <version>${javasimon.version}</version>
        </dependency>
        <!-- Embedded Java Simon web console -->
        <dependency>
            <groupId>org.javasimon</groupId>
            <artifactId>javasimon-console-embed</artifactId>
            <version>${javasimon.version}</version>
        </dependency>
        <!-- <dependency> <groupId>javax.validation</groupId> <artifactId>validation-api</artifactId> 
            <version>${validation-api.version}</version> </dependency> -->

        <!-- <dependency> <groupId>javax.annotation</groupId> <artifactId>jsr250-api</artifactId> 
            <version>1.0</version> </dependency> -->

        
        <!-- Upgrade version of EhCache used -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>${ehcache.version}</version>
        </dependency>
        <!-- for hibernate end -->
        <!-- for service -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>
        
        <!-- http://blog.csdn.net/zjh19870703/article/details/7618412 -->
        <!-- Core utilities used by other modules. Define this if you use 
            Spring Utility APIs (org.springframework.core, org.springframework.util) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Expression Language (depends on spring-core) Define this if 
            you use Spring Expression APIs (org.springframework.expression) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Bean Factory and JavaBeans utilities (depends on spring-core) 
            Define this if you use Spring Bean APIs (org.springframework.beans) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
            spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Application Context (depends on spring-core, spring-expression, 
            spring-aop, spring-beans) This is the central artifact for Spring's Dependency 
            Injection Container and is generally always defined -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Various Application Context utilities, including EhCache, JavaMail, 
            Quartz, and Freemarker integration Define this if you need any of these integrations -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Transaction Management Abstraction (depends on spring-core, 
            spring-beans, spring-aop, spring-context) Define this if you use Spring Transactions 
            or DAO Exception Hierarchy (org.springframework.transaction, org.springframework.dao) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- JDBC Data Access Library (depends on spring-core, spring-beans, 
            spring-context, spring-tx) Define this if you use Spring's JdbcTemplate API 
            (org.springframework.jdbc) <dependency> <groupId>org.springframework</groupId> 
            <artifactId>spring-jdbc</artifactId> <version>${org.springframework.version}</version> 
            </dependency> -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Object-to-XML Mapping (OXM) abstraction and integration with 
            JAXB, JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
            spring-context) Define this if you need OXM (org.springframework.oxm) <dependency> 
            <groupId>org.springframework</groupId> <artifactId>spring-oxm</artifactId> 
            <version>${org.springframework.version}</version> </dependency> -->

        <!-- Support for testing Spring applications with tools such as JUnit 
            and TestNG This artifact is generally always defined with a 'test' scope 
            for the integration testing framework and unit testing stubs -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- for spring end -->
    
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>${metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-servlets</artifactId>
            <version>${metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-json</artifactId>
            <version>${metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-healthchecks</artifactId>
            <version>${metrics.version}</version>
        </dependency>
        <!-- <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency> -->
        

        <!-- security -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-quartz</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>

        <!-- web -->
        <!-- Web application development utilities applicable to both Servlet 
            and Portlet Environments (depends on spring-core, spring-beans, spring-context) 
            Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
            web framework with Spring (org.springframework.web) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring MVC for Servlet Environments (depends on spring-core, 
            spring-beans, spring-context, spring-web) Define this if you use Spring MVC 
            with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring MVC for Portlet Environments (depends on spring-core, 
            spring-beans, spring-context, spring-web) Define this if you use Spring MVC 
            with a Portlet Container (org.springframework.web.portlet) <dependency> <groupId>org.springframework</groupId> 
            <artifactId>spring-webmvc-portlet</artifactId> <version>${spring.version}</version> 
            </dependency> -->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>el-api</artifactId>
            <version>${el.version}</version>
        </dependency>
        <dependency>
          <groupId>org.glassfish.web</groupId>
          <artifactId>el-impl</artifactId>
          <version>${el.version}</version>
          <scope>test</scope>
        </dependency>
        <!-- <dependency> <groupId>displaytag</groupId> <artifactId>displaytag</artifactId> 
            <version>${displaytag.version}</version> <exclusions> <exclusion> <groupId>org.slf4j</groupId> 
            <artifactId>jcl104-over-slf4j</artifactId> </exclusion> </exclusions> </dependency> -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.github.axet</groupId>
            <artifactId>kaptcha</artifactId>
            <version>${kaptcha.version}</version>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>sitemesh</artifactId>
            <version>${sitemesh.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>
                

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>de.juplo</groupId>
                    <artifactId>hibernate4-maven-plugin</artifactId>
                    <version>1.1.0</version>
                    <configuration>
                        <url>${jdbc.url}</url>
                        <driver_class>${jdbc.driverClassName}</driver_class>
                        <dialect>${hibernate.dialect}</dialect>
                        <username>${jdbc.username}</username>
                        <password>${jdbc.password}</password>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>export</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>${jdbc.groupId}</groupId>
                            <artifactId>${jdbc.artifactId}</artifactId>
                            <version>${jdbc.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>native2ascii-maven-plugin</artifactId>
                    <version>1.0-beta-1</version>
                    <executions>
                        <execution>
                            <id>native2ascii-utf8</id>
                            <!-- default phase <phase>process-classes</phase> -->
                            <goals>
                                <goal>native2ascii</goal>
                            </goals>
                            <configuration>
                                <encoding>UTF8</encoding>
                                <includes>
                                    <include>messages*.properties</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

         <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
            </plugin> -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                  <source>${java.version}</source>
                  <target>${java.version}</target>
                </configuration>
              </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <escapeString>\</escapeString>
                    <!-- <webResources> <resource> <directory>src/main/resources/packaged</directory> 
                        <targetPath>WEB-INF/classes</targetPath> <filtering>true</filtering> <includes> 
                        <include>hibernate.properties</include> </includes> </resource> </webResources> -->
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>